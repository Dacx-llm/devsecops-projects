name: Container Security Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'dockerfiles/**'
      - 'kubernetes/**'
      - '.github/workflows/container-security.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'dockerfiles/**'
      - 'kubernetes/**'
  schedule:
    - cron: '0 0 * * 0'  # Weekly scan on Sundays

jobs:
  dockerfile-lint:
    name: Dockerfile Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: dockerfiles/nodejs.Dockerfile
          
      - name: Hadolint Python
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: dockerfiles/python.Dockerfile

  build-images:
    name: Build Container Images
    runs-on: ubuntu-latest
    needs: [dockerfile-lint]
    strategy:
      matrix:
        image: [nodejs, python]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build ${{ matrix.image }} image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: dockerfiles/${{ matrix.image }}.Dockerfile
          push: false
          tags: secure-${{ matrix.image }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/secure-${{ matrix.image }}.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v3
        with:
          name: secure-${{ matrix.image }}-image
          path: /tmp/secure-${{ matrix.image }}.tar

  trivy-scan:
    name: Trivy Vulnerability Scan
    runs-on: ubuntu-latest
    needs: [build-images]
    strategy:
      matrix:
        image: [nodejs, python]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: secure-${{ matrix.image }}-image
          path: /tmp

      - name: Load Docker image
        run: docker load --input /tmp/secure-${{ matrix.image }}.tar

      - name: Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'secure-${{ matrix.image }}:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results-${{ matrix.image }}.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results-${{ matrix.image }}.sarif'
          category: trivy-${{ matrix.image }}

  grype-scan:
    name: Grype Vulnerability Scan
    runs-on: ubuntu-latest
    needs: [build-images]
    strategy:
      matrix:
        image: [nodejs, python]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: secure-${{ matrix.image }}-image
          path: /tmp

      - name: Load Docker image
        run: docker load --input /tmp/secure-${{ matrix.image }}.tar

      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Scan image with Grype
        run: |
          grype secure-${{ matrix.image }}:${{ github.sha }} -o json > grype-results-${{ matrix.image }}.json

      - name: Upload Grype scan results
        uses: actions/upload-artifact@v3
        with:
          name: grype-results-${{ matrix.image }}
          path: grype-results-${{ matrix.image }}.json

  dockle-scan:
    name: Dockle CIS Scan
    runs-on: ubuntu-latest
    needs: [build-images]
    strategy:
      matrix:
        image: [nodejs, python]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: secure-${{ matrix.image }}-image
          path: /tmp

      - name: Load Docker image
        run: docker load --input /tmp/secure-${{ matrix.image }}.tar

      - name: Run Dockle
        uses: goodwithtech/dockle-action@v0.1.0
        with:
          image: secure-${{ matrix.image }}:${{ github.sha }}
          format: json
          output: dockle-results-${{ matrix.image }}.json
          exit-code: 1
          exit-level: warn
          ignore: CIS-DI-0001

      - name: Upload Dockle scan results
        uses: actions/upload-artifact@v3
        with:
          name: dockle-results-${{ matrix.image }}
          path: dockle-results-${{ matrix.image }}.json

  k8s-manifest-scan:
    name: Kubernetes Manifest Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Kubesec
        uses: controlplaneio/kubesec-action@master
        with:
          input: kubernetes/applications/

      - name: Run kube-score
        run: |
          # Install kube-score
          curl -L -o /tmp/kube-score https://github.com/zegl/kube-score/releases/download/v1.14.0/kube-score_1.14.0_linux_amd64
          chmod +x /tmp/kube-score
          
          # Scan Kubernetes manifests
          find kubernetes -name "*.yaml" -o -name "*.yml" | xargs /tmp/kube-score score --output-format json > kube-score-results.json

      - name: Upload kube-score results
        uses: actions/upload-artifact@v3
        with:
          name: kube-score-results
          path: kube-score-results.json

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [trivy-scan, grype-scan, dockle-scan, k8s-manifest-scan]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Generate consolidated report
        run: |
          echo "# Container Security Scan Results" > security-report.md
          echo "## Summary" >> security-report.md
          echo "Security scan completed on $(date)" >> security-report.md
          
          echo "### Trivy Vulnerability Scan" >> security-report.md
          echo "- Node.js Image: ${{ needs.trivy-scan.result }}" >> security-report.md
          echo "- Python Image: ${{ needs.trivy-scan.result }}" >> security-report.md
          
          echo "### Grype Vulnerability Scan" >> security-report.md
          echo "- Node.js Image: ${{ needs.grype-scan.result }}" >> security-report.md
          echo "- Python Image: ${{ needs.grype-scan.result }}" >> security-report.md
          
          echo "### Dockle CIS Scan" >> security-report.md
          echo "- Node.js Image: ${{ needs.dockle-scan.result }}" >> security-report.md
          echo "- Python Image: ${{ needs.dockle-scan.result }}" >> security-report.md
          
          echo "### Kubernetes Manifest Scan" >> security-report.md
          echo "- Result: ${{ needs.k8s-manifest-scan.result }}" >> security-report.md

      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: container-security-report
          path: security-report.md
