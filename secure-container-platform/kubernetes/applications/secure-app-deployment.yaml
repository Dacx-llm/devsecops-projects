apiVersion: apps/v1
kind: Deployment
metadata:
  name: secure-app
  namespace: default
  labels:
    app: secure-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: secure-app
  template:
    metadata:
      labels:
        app: secure-app
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: "runtime/default"
    spec:
      # Security Context for the Pod
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: secure-app
        image: secure-nodejs-app:latest
        imagePullPolicy: Always
        # Security Context for the Container
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        ports:
        - containerPort: 3000
          name: http
        # Resource Limits
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        # Liveness Probe
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        # Readiness Probe
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3
        # Environment Variables
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        # Volume Mounts for temporary files
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: config-volume
          mountPath: /app/config
          readOnly: true
      # Volumes
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: config-volume
        configMap:
          name: secure-app-config
          defaultMode: 0400
      # Image Pull Secrets
      imagePullSecrets:
      - name: regcred
      # Service Account
      serviceAccountName: secure-app-sa
      # Termination Grace Period
      terminationGracePeriodSeconds: 30
      # Affinity Rules
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - secure-app
              topologyKey: "kubernetes.io/hostname"
---
apiVersion: v1
kind: Service
metadata:
  name: secure-app
  namespace: default
  labels:
    app: secure-app
spec:
  selector:
    app: secure-app
  ports:
  - port: 80
    targetPort: 3000
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: secure-app-config
  namespace: default
data:
  config.json: |
    {
      "appName": "secure-app",
      "logLevel": "info",
      "metrics": {
        "enabled": true,
        "endpoint": "/metrics"
      }
    }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secure-app-sa
  namespace: default
automountServiceAccountToken: false
